# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Installing Script for all CP4MCM components
#
# V2.0 
#
# Â©2020 nikh@ch.ibm.com
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"

source ./99_config-global.sh
export TEMP_PATH=$TMPDIR





# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Do Not Edit Below
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
__output "${GREEN}***************************************************************************************************************************************************${NC}"
__output "${GREEN}***************************************************************************************************************************************************${NC}"
__output "${GREEN}***************************************************************************************************************************************************${NC}"
__output "${GREEN}***************************************************************************************************************************************************${NC}"
__output "  "
__output " ${CYAN} CloudPack for Multicloud Management 2.0 - ${RED}RESTART NAMESPACES${NC}"
__output "  "
__output "${GREEN}***************************************************************************************************************************************************${NC}"
__output "${GREEN}***************************************************************************************************************************************************${NC}"
__output "${GREEN}***************************************************************************************************************************************************${NC}"
__output "  "
__output "  "


header1Begin "Restarting CP4MCM Modules"
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# INSTALL
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
__output "---------------------------------------------------------------------------------------------------------------------------"
__output "---------------------------------------------------------------------------------------------------------------------------"
__output " ${ORANGE}Do you want to ${RED}RESTART${ORANGE} modules for CP4MCM${NC}"
__output ""
__output "---------------------------------------------------------------------------------------------------------------------------"
__output "---------------------------------------------------------------------------------------------------------------------------"


    read -p "Restart CP4MCM Modules (you will be able to chose)? [y,N]" DO_COMM
        if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then
          __output "${GREEN}OK${NC}"
        else
          __output "${RED}Aborting${NC}"
          exit 1
        fi




        
        read -p "Restart INFRASTRUCTURE-MANAGEMENT? [y,N]" DO_COMM
        if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then
          __output "${GREEN}OK${NC}"
          __output "${RED}RESTARTING ALL PODS IN NAMESPACE${NC}"
          kubectl get pods -n management-infrastructure-management | awk '{print $1}' | xargs kubectl delete pod -n management-infrastructure-management
        fi

        read -p "Restart MONITORING? [y,N]" DO_COMM
        if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then
          __output "${GREEN}OK${NC}"
          __output "${RED}RESTARTING ALL PODS IN NAMESPACE${NC}"
          kubectl get pods -n management-monitoring | awk '{print $1}' | xargs kubectl delete pod -n management-monitoring
        fi

        read -p "Restart OPERATIONS? [y,N]" DO_COMM
        if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then
          __output "${GREEN}OK${NC}"
          __output "${RED}RESTARTING ALL PODS IN NAMESPACE${NC}"
          kubectl get pods -n management-operations | awk '{print $1}' | xargs kubectl delete pod -n management-operations
        fi

        read -p "Restart SECURITY SERVICES? [y,N]" DO_COMM
        if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then
          __output "${GREEN}OK${NC}"
          __output "${RED}RESTARTING ALL PODS IN NAMESPACE${NC}"
          kubectl get pods -n management-security-services | awk '{print $1}' | xargs kubectl delete pod -n management-security-services
        fi



        read -p "Restart MULTICLUSTER-ENDPOINT? [y,N]" DO_COMM
        if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then
          __output "${GREEN}OK${NC}"
          __output "${RED}RESTARTING ALL PODS IN NAMESPACE${NC}"
          kubectl get pods -n multicluster-endpoint | awk '{print $1}' | xargs kubectl delete pod -n multicluster-endpoint
        fi



        read -p "Restart KUBE-SYSTEM? [y,N]" DO_COMM
        if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then
          __output "${GREEN}OK${NC}"
          __output "${RED}RESTARTING ALL PODS IN NAMESPACE${NC}"
          kubectl get pods -n kube-system | awk '{print $1}' | xargs kubectl delete pod -n kube-system
        fi


        read -p "Restart COMMON SERVICES? [y,N]" DO_COMM
        if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then
          __output "${GREEN}OK${NC}"
          __output "${RED}RESTARTING ALL PODS IN NAMESPACE${NC}"
          kubectl get pods -n ibm-common-services | awk '{print $1}' | xargs kubectl delete pod -n ibm-common-services
        fi


        read -p "Restart DEFAULT? [y,N]" DO_COMM
        if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then
          __output "${GREEN}OK${NC}"
          __output "${RED}RESTARTING ALL PODS IN NAMESPACE${NC}"
          kubectl get pods -n default | awk '{print $1}' | xargs kubectl delete pod -n default
        fi

header1End "Restarting CP4MCM Modules"











__output "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
__output "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
__output " ${GREEN}${healthy} Cloud Pak for Multicloud Management (CP4MCM) 2.0${NC}"
__output "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
__output "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
__output "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
__output "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
__output "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
__output "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
__output "${GREEN}***************************************************************************************************************************************************${NC}"
__output "${GREEN}***************************************************************************************************************************************************${NC}"

